/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Specifies how the WebRTC will be spoofed. Possible values:
 * 'automatic': Automatically set the webRTC public IP by the IP
 * 'manual': Manually override the webRTC public IP and private IP in the profile
 * 'block': Block the WebRTC functionality
 * 'off': Turn off the spoofing, use the original settings
 * @export
 */
export const WebRtcSpoofingType = {
    Automatic: "automatic",
    Manual: "manual",
    Block: "block",
    Off: "off",
} as const;
export type WebRtcSpoofingType = (typeof WebRtcSpoofingType)[keyof typeof WebRtcSpoofingType];

export function instanceOfWebRtcSpoofingType(value: any): boolean {
    for (const key in WebRtcSpoofingType) {
        if (Object.prototype.hasOwnProperty.call(WebRtcSpoofingType, key)) {
            if (WebRtcSpoofingType[key as keyof typeof WebRtcSpoofingType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function WebRtcSpoofingTypeFromJSON(json: any): WebRtcSpoofingType {
    return WebRtcSpoofingTypeFromJSONTyped(json, false);
}

export function WebRtcSpoofingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebRtcSpoofingType {
    return json as WebRtcSpoofingType;
}

export function WebRtcSpoofingTypeToJSON(value?: WebRtcSpoofingType | null): any {
    return value as any;
}

export function WebRtcSpoofingTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): WebRtcSpoofingType {
    return value as WebRtcSpoofingType;
}
