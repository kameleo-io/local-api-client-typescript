/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Specifies how the screen will be spoofed. Possible values:
 * 'automatic': Automatically override the screen resolution based on the fingerprint.
 * 'manual': Manually override the screen resolution.
 * 'off': Turn off the spoofing, use the original settings.
 * @export
 */
export const ScreenSpoofingType = {
    Automatic: "automatic",
    Manual: "manual",
    Off: "off",
} as const;
export type ScreenSpoofingType = (typeof ScreenSpoofingType)[keyof typeof ScreenSpoofingType];

export function instanceOfScreenSpoofingType(value: any): boolean {
    for (const key in ScreenSpoofingType) {
        if (Object.prototype.hasOwnProperty.call(ScreenSpoofingType, key)) {
            if (ScreenSpoofingType[key as keyof typeof ScreenSpoofingType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ScreenSpoofingTypeFromJSON(json: any): ScreenSpoofingType {
    return ScreenSpoofingTypeFromJSONTyped(json, false);
}

export function ScreenSpoofingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScreenSpoofingType {
    return json as ScreenSpoofingType;
}

export function ScreenSpoofingTypeToJSON(value?: ScreenSpoofingType | null): any {
    return value as any;
}

export function ScreenSpoofingTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): ScreenSpoofingType {
    return value as ScreenSpoofingType;
}
