/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface Os
 */
export interface Os {
    /**
     * Specifies the operating system family. Possible values are 'windows', 'macos', 'linux', 'android', 'ios'.
     * @type {string}
     * @memberof Os
     */
    family: string | null;
    /**
     * The specific version of the OS. For example it helps you determine the exact version of the macOS.
     * @type {string}
     * @memberof Os
     */
    version: string | null;
    /**
     * The OS's platform, indicating the processor architecture (e.g., 64-bit, 32-bit)
     * @type {string}
     * @memberof Os
     */
    platform: string | null;
}

/**
 * Check if a given object implements the Os interface.
 */
export function instanceOfOs(value: object): value is Os {
    if (!("family" in value) || value["family"] === undefined) return false;
    if (!("version" in value) || value["version"] === undefined) return false;
    if (!("platform" in value) || value["platform"] === undefined) return false;
    return true;
}

export function OsFromJSON(json: any): Os {
    return OsFromJSONTyped(json, false);
}

export function OsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Os {
    if (json == null) {
        return json;
    }
    return {
        family: json["family"],
        version: json["version"],
        platform: json["platform"],
    };
}

export function OsToJSON(json: any): Os {
    return OsToJSONTyped(json, false);
}

export function OsToJSONTyped(value?: Os | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        family: value["family"],
        version: value["version"],
        platform: value["platform"],
    };
}
