/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface WebglMeta
 */
export interface WebglMeta {
    /**
     * The UnmaskedVendor field from WebGL context
     * @type {string}
     * @memberof WebglMeta
     */
    vendor: string | null;
    /**
     * The UnmaskedRenderer field from WebGL context
     * @type {string}
     * @memberof WebglMeta
     */
    renderer?: string | null;
}

/**
 * Check if a given object implements the WebglMeta interface.
 */
export function instanceOfWebglMeta(value: object): value is WebglMeta {
    if (!("vendor" in value) || value["vendor"] === undefined) return false;
    return true;
}

export function WebglMetaFromJSON(json: any): WebglMeta {
    return WebglMetaFromJSONTyped(json, false);
}

export function WebglMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebglMeta {
    if (json == null) {
        return json;
    }
    return {
        vendor: json["vendor"],
        renderer: json["renderer"] == null ? undefined : json["renderer"],
    };
}

export function WebglMetaToJSON(json: any): WebglMeta {
    return WebglMetaToJSONTyped(json, false);
}

export function WebglMetaToJSONTyped(value?: WebglMeta | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        vendor: value["vendor"],
        renderer: value["renderer"],
    };
}
