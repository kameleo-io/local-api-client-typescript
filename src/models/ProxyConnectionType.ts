/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Proxy connection settings of the profiles. Possible values:
 * 'none': Direct connection without any proxy.
 * 'http': Use a HTTP proxy for upstream communication.
 * 'socks5': Use a SOCKS5 proxy for upstream communication.
 * 'ssh': Use an SSH connection for upstream communication. Basically a SOCKS5 proxy created at the given SSH host.
 * @export
 */
export const ProxyConnectionType = {
    None: "none",
    Http: "http",
    Socks5: "socks5",
    Ssh: "ssh",
} as const;
export type ProxyConnectionType = (typeof ProxyConnectionType)[keyof typeof ProxyConnectionType];

export function instanceOfProxyConnectionType(value: any): boolean {
    for (const key in ProxyConnectionType) {
        if (Object.prototype.hasOwnProperty.call(ProxyConnectionType, key)) {
            if (ProxyConnectionType[key as keyof typeof ProxyConnectionType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ProxyConnectionTypeFromJSON(json: any): ProxyConnectionType {
    return ProxyConnectionTypeFromJSONTyped(json, false);
}

export function ProxyConnectionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProxyConnectionType {
    return json as ProxyConnectionType;
}

export function ProxyConnectionTypeToJSON(value?: ProxyConnectionType | null): any {
    return value as any;
}

export function ProxyConnectionTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): ProxyConnectionType {
    return value as ProxyConnectionType;
}
