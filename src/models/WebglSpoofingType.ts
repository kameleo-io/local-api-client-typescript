/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Specifies how the WebGL will be spoofed. Possible values:
 * 'noise': Add some noise to the WebGL generation
 * 'block': Completely block the 3D API
 * 'off': Turn off the spoofing, use the original settings
 * @export
 */
export const WebglSpoofingType = {
    Noise: "noise",
    Block: "block",
    Off: "off",
} as const;
export type WebglSpoofingType = (typeof WebglSpoofingType)[keyof typeof WebglSpoofingType];

export function instanceOfWebglSpoofingType(value: any): boolean {
    for (const key in WebglSpoofingType) {
        if (Object.prototype.hasOwnProperty.call(WebglSpoofingType, key)) {
            if (WebglSpoofingType[key as keyof typeof WebglSpoofingType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function WebglSpoofingTypeFromJSON(json: any): WebglSpoofingType {
    return WebglSpoofingTypeFromJSONTyped(json, false);
}

export function WebglSpoofingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebglSpoofingType {
    return json as WebglSpoofingType;
}

export function WebglSpoofingTypeToJSON(value?: WebglSpoofingType | null): any {
    return value as any;
}

export function WebglSpoofingTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): WebglSpoofingType {
    return value as WebglSpoofingType;
}
