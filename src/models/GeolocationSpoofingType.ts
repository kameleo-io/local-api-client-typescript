/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Specifies how the geolocation will be spoofed. Possible values:
 * 'automatic': Automatically set the values based on the IP address
 * 'manual': Manually set the longitude and latitude in the profile
 * 'block': Completely block the Geolocation API
 * 'off': Turn off the spoofing, use the original settings
 * @export
 */
export const GeolocationSpoofingType = {
    Automatic: "automatic",
    Manual: "manual",
    Block: "block",
    Off: "off",
} as const;
export type GeolocationSpoofingType = (typeof GeolocationSpoofingType)[keyof typeof GeolocationSpoofingType];

export function instanceOfGeolocationSpoofingType(value: any): boolean {
    for (const key in GeolocationSpoofingType) {
        if (Object.prototype.hasOwnProperty.call(GeolocationSpoofingType, key)) {
            if (GeolocationSpoofingType[key as keyof typeof GeolocationSpoofingType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function GeolocationSpoofingTypeFromJSON(json: any): GeolocationSpoofingType {
    return GeolocationSpoofingTypeFromJSONTyped(json, false);
}

export function GeolocationSpoofingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeolocationSpoofingType {
    return json as GeolocationSpoofingType;
}

export function GeolocationSpoofingTypeToJSON(value?: GeolocationSpoofingType | null): any {
    return value as any;
}

export function GeolocationSpoofingTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): GeolocationSpoofingType {
    return value as GeolocationSpoofingType;
}
