/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ProfilePreview } from "./ProfilePreview";
import { ProfilePreviewFromJSON, ProfilePreviewFromJSONTyped, ProfilePreviewToJSON, ProfilePreviewToJSONTyped } from "./ProfilePreview";

/**
 *
 * @export
 * @interface DeleteFolderResponse
 */
export interface DeleteFolderResponse {
    /**
     * Ids of the deleted folders.
     * @type {Array<string>}
     * @memberof DeleteFolderResponse
     */
    deletedFolders: Array<string> | null;
    /**
     * Ids of the deleted profiles.
     * @type {Array<string>}
     * @memberof DeleteFolderResponse
     */
    deletedProfiles: Array<string> | null;
    /**
     * Ids of the profiles moved to top-level.
     * @type {Array<ProfilePreview>}
     * @memberof DeleteFolderResponse
     */
    movedProfiles: Array<ProfilePreview> | null;
}

/**
 * Check if a given object implements the DeleteFolderResponse interface.
 */
export function instanceOfDeleteFolderResponse(value: object): value is DeleteFolderResponse {
    if (!("deletedFolders" in value) || value["deletedFolders"] === undefined) return false;
    if (!("deletedProfiles" in value) || value["deletedProfiles"] === undefined) return false;
    if (!("movedProfiles" in value) || value["movedProfiles"] === undefined) return false;
    return true;
}

export function DeleteFolderResponseFromJSON(json: any): DeleteFolderResponse {
    return DeleteFolderResponseFromJSONTyped(json, false);
}

export function DeleteFolderResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteFolderResponse {
    if (json == null) {
        return json;
    }
    return {
        deletedFolders: json["deletedFolders"] == null ? null : json["deletedFolders"],
        deletedProfiles: json["deletedProfiles"] == null ? null : json["deletedProfiles"],
        movedProfiles: json["movedProfiles"] == null ? null : (json["movedProfiles"] as Array<any>).map(ProfilePreviewFromJSON),
    };
}

export function DeleteFolderResponseToJSON(json: any): DeleteFolderResponse {
    return DeleteFolderResponseToJSONTyped(json, false);
}

export function DeleteFolderResponseToJSONTyped(value?: DeleteFolderResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        deletedFolders: value["deletedFolders"],
        deletedProfiles: value["deletedProfiles"],
        movedProfiles: value["movedProfiles"] == null ? null : (value["movedProfiles"] as Array<any>).map(ProfilePreviewToJSON),
    };
}
