/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Represents the lifetime states of a profile, indicating which actions
 * can be performed with the associated browser engine at each state. Possible values are:
 * - Created: Profile is created; the associated browser engine is not started.
 * - Starting: The associated browser engine is starting.
 * - Running: The associated browser engine is currently running.
 * - Terminating: The associated browser engine is in the process of terminating.
 * - Terminated: The associated browser engine is not running but has been started at least once.
 * - Locked: The profile is currently being used by another user.
 * - Loading: The profile data or the browser engine is syncing with the cloud storage.
 * - Unknown: State of the profile is undefined.
 * @export
 */
export const ProfileLifetimeState = {
    Created: "created",
    Starting: "starting",
    Running: "running",
    Terminating: "terminating",
    Terminated: "terminated",
    Locked: "locked",
    Loading: "loading",
    Unknown: "unknown",
} as const;
export type ProfileLifetimeState = (typeof ProfileLifetimeState)[keyof typeof ProfileLifetimeState];

export function instanceOfProfileLifetimeState(value: any): boolean {
    for (const key in ProfileLifetimeState) {
        if (Object.prototype.hasOwnProperty.call(ProfileLifetimeState, key)) {
            if (ProfileLifetimeState[key as keyof typeof ProfileLifetimeState] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ProfileLifetimeStateFromJSON(json: any): ProfileLifetimeState {
    return ProfileLifetimeStateFromJSONTyped(json, false);
}

export function ProfileLifetimeStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileLifetimeState {
    return json as ProfileLifetimeState;
}

export function ProfileLifetimeStateToJSON(value?: ProfileLifetimeState | null): any {
    return value as any;
}

export function ProfileLifetimeStateToJSONTyped(value: any, ignoreDiscriminator: boolean): ProfileLifetimeState {
    return value as ProfileLifetimeState;
}
