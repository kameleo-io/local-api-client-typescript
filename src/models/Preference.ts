/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Represents a Key-Value pair where Value can be a string or a boolean or an integer
 * @export
 * @interface Preference
 */
export interface Preference {
    /**
     * Key of the preference
     * @type {string}
     * @memberof Preference
     */
    key: string | null;
    /**
     * Value of the preference. It can a string or a boolean or an integer
     * @type {any}
     * @memberof Preference
     */
    value: any | null;
}

/**
 * Check if a given object implements the Preference interface.
 */
export function instanceOfPreference(value: object): value is Preference {
    if (!("key" in value) || value["key"] === undefined) return false;
    if (!("value" in value) || value["value"] === undefined) return false;
    return true;
}

export function PreferenceFromJSON(json: any): Preference {
    return PreferenceFromJSONTyped(json, false);
}

export function PreferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Preference {
    if (json == null) {
        return json;
    }
    return {
        key: json["key"],
        value: json["value"],
    };
}

export function PreferenceToJSON(json: any): Preference {
    return PreferenceToJSONTyped(json, false);
}

export function PreferenceToJSONTyped(value?: Preference | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        key: value["key"],
        value: value["value"],
    };
}
