/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ShareAccess } from "./ShareAccess";
import { ShareAccessFromJSON, ShareAccessFromJSONTyped, ShareAccessToJSON, ShareAccessToJSONTyped } from "./ShareAccess";
import type { ProfilePreview } from "./ProfilePreview";
import { ProfilePreviewFromJSON, ProfilePreviewFromJSONTyped, ProfilePreviewToJSON, ProfilePreviewToJSONTyped } from "./ProfilePreview";

/**
 *
 * @export
 * @interface FolderResponse
 */
export interface FolderResponse {
    /**
     * A unique identifier of the folder.
     * @type {string}
     * @memberof FolderResponse
     */
    id: string;
    /**
     * The name of the folder.
     * @type {string}
     * @memberof FolderResponse
     */
    name: string | null;
    /**
     * Timestamp of the last modification.
     * @type {Date}
     * @memberof FolderResponse
     */
    lastModifiedAt: Date;
    /**
     * Name of the user who last modified the folder.
     * @type {string}
     * @memberof FolderResponse
     */
    lastModifiedBy: string | null;
    /**
     * Timestamp of the creation.
     * @type {Date}
     * @memberof FolderResponse
     */
    createdAt: Date;
    /**
     * Name of the user who created the folder.
     * @type {string}
     * @memberof FolderResponse
     */
    createdBy: string | null;
    /**
     * List of profiles in the current folder.
     * @type {Array<ProfilePreview>}
     * @memberof FolderResponse
     */
    profiles: Array<ProfilePreview> | null;
    /**
     * List of users accessing this folder.
     * @type {Array<ShareAccess>}
     * @memberof FolderResponse
     */
    shareAccesses: Array<ShareAccess> | null;
}

/**
 * Check if a given object implements the FolderResponse interface.
 */
export function instanceOfFolderResponse(value: object): value is FolderResponse {
    if (!("id" in value) || value["id"] === undefined) return false;
    if (!("name" in value) || value["name"] === undefined) return false;
    if (!("lastModifiedAt" in value) || value["lastModifiedAt"] === undefined) return false;
    if (!("lastModifiedBy" in value) || value["lastModifiedBy"] === undefined) return false;
    if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
    if (!("createdBy" in value) || value["createdBy"] === undefined) return false;
    if (!("profiles" in value) || value["profiles"] === undefined) return false;
    if (!("shareAccesses" in value) || value["shareAccesses"] === undefined) return false;
    return true;
}

export function FolderResponseFromJSON(json: any): FolderResponse {
    return FolderResponseFromJSONTyped(json, false);
}

export function FolderResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolderResponse {
    if (json == null) {
        return json;
    }
    return {
        id: json["id"],
        name: json["name"],
        lastModifiedAt: new Date(json["lastModifiedAt"]),
        lastModifiedBy: json["lastModifiedBy"],
        createdAt: new Date(json["createdAt"]),
        createdBy: json["createdBy"],
        profiles: json["profiles"] == null ? null : (json["profiles"] as Array<any>).map(ProfilePreviewFromJSON),
        shareAccesses: json["shareAccesses"] == null ? null : (json["shareAccesses"] as Array<any>).map(ShareAccessFromJSON),
    };
}

export function FolderResponseToJSON(json: any): FolderResponse {
    return FolderResponseToJSONTyped(json, false);
}

export function FolderResponseToJSONTyped(value?: FolderResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        id: value["id"],
        name: value["name"],
        lastModifiedAt: value["lastModifiedAt"].toISOString(),
        lastModifiedBy: value["lastModifiedBy"],
        createdAt: value["createdAt"].toISOString(),
        createdBy: value["createdBy"],
        profiles: value["profiles"] == null ? null : (value["profiles"] as Array<any>).map(ProfilePreviewToJSON),
        shareAccesses: value["shareAccesses"] == null ? null : (value["shareAccesses"] as Array<any>).map(ShareAccessToJSON),
    };
}
