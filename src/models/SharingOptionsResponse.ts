/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { User } from "./User";
import { UserFromJSON, UserFromJSONTyped, UserToJSON, UserToJSONTyped } from "./User";
import type { GroupRole } from "./GroupRole";
import { GroupRoleFromJSON, GroupRoleFromJSONTyped, GroupRoleToJSON, GroupRoleToJSONTyped } from "./GroupRole";

/**
 *
 * @export
 * @interface SharingOptionsResponse
 */
export interface SharingOptionsResponse {
    /**
     * List of users in your team.
     * @type {Array<User>}
     * @memberof SharingOptionsResponse
     */
    users?: Array<User> | null;
    /**
     * List of roles you can give the users.
     * @type {Array<GroupRole>}
     * @memberof SharingOptionsResponse
     */
    roles?: Array<GroupRole> | null;
}

/**
 * Check if a given object implements the SharingOptionsResponse interface.
 */
export function instanceOfSharingOptionsResponse(value: object): value is SharingOptionsResponse {
    return true;
}

export function SharingOptionsResponseFromJSON(json: any): SharingOptionsResponse {
    return SharingOptionsResponseFromJSONTyped(json, false);
}

export function SharingOptionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SharingOptionsResponse {
    if (json == null) {
        return json;
    }
    return {
        users: json["users"] == null ? undefined : (json["users"] as Array<any>).map(UserFromJSON),
        roles: json["roles"] == null ? undefined : (json["roles"] as Array<any>).map(GroupRoleFromJSON),
    };
}

export function SharingOptionsResponseToJSON(json: any): SharingOptionsResponse {
    return SharingOptionsResponseToJSONTyped(json, false);
}

export function SharingOptionsResponseToJSONTyped(value?: SharingOptionsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        users: value["users"] == null ? undefined : (value["users"] as Array<any>).map(UserToJSON),
        roles: value["roles"] == null ? undefined : (value["roles"] as Array<any>).map(GroupRoleToJSON),
    };
}
