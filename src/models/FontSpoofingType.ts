/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Specifies how the fonts will be spoofed. Possible values:
 * 'automatic': Spoof fonts based on the browser fingerpint.
 * 'off': Don't spoof fonts, use the real fonts of your machine.
 * @export
 */
export const FontSpoofingType = {
    Automatic: "automatic",
    Off: "off",
} as const;
export type FontSpoofingType = (typeof FontSpoofingType)[keyof typeof FontSpoofingType];

export function instanceOfFontSpoofingType(value: any): boolean {
    for (const key in FontSpoofingType) {
        if (Object.prototype.hasOwnProperty.call(FontSpoofingType, key)) {
            if (FontSpoofingType[key as keyof typeof FontSpoofingType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function FontSpoofingTypeFromJSON(json: any): FontSpoofingType {
    return FontSpoofingTypeFromJSONTyped(json, false);
}

export function FontSpoofingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FontSpoofingType {
    return json as FontSpoofingType;
}

export function FontSpoofingTypeToJSON(value?: FontSpoofingType | null): any {
    return value as any;
}

export function FontSpoofingTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): FontSpoofingType {
    return value as FontSpoofingType;
}
