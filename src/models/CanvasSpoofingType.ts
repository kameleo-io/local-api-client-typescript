/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Specifies how the canvas will be spoofed. Possible values:
 * 'intelligent': Use intelligent canvas spoofing. This will result non-unique canvas fingerprints.
 * 'noise': Add some noise to canvas generation.
 * 'block': Completely block the 2D API.
 * 'off': Turn off the spoofing, use the original settings.
 * @export
 */
export const CanvasSpoofingType = {
    Intelligent: "intelligent",
    Noise: "noise",
    Block: "block",
    Off: "off",
} as const;
export type CanvasSpoofingType = (typeof CanvasSpoofingType)[keyof typeof CanvasSpoofingType];

export function instanceOfCanvasSpoofingType(value: any): boolean {
    for (const key in CanvasSpoofingType) {
        if (Object.prototype.hasOwnProperty.call(CanvasSpoofingType, key)) {
            if (CanvasSpoofingType[key as keyof typeof CanvasSpoofingType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function CanvasSpoofingTypeFromJSON(json: any): CanvasSpoofingType {
    return CanvasSpoofingTypeFromJSONTyped(json, false);
}

export function CanvasSpoofingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CanvasSpoofingType {
    return json as CanvasSpoofingType;
}

export function CanvasSpoofingTypeToJSON(value?: CanvasSpoofingType | null): any {
    return value as any;
}

export function CanvasSpoofingTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): CanvasSpoofingType {
    return value as CanvasSpoofingType;
}
