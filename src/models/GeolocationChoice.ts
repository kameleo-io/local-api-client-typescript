/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { GeolocationSpoofingType } from "./GeolocationSpoofingType";
import {
    GeolocationSpoofingTypeFromJSON,
    GeolocationSpoofingTypeFromJSONTyped,
    GeolocationSpoofingTypeToJSON,
    GeolocationSpoofingTypeToJSONTyped,
} from "./GeolocationSpoofingType";
import type { GeolocationSpoofingOptions } from "./GeolocationSpoofingOptions";
import {
    GeolocationSpoofingOptionsFromJSON,
    GeolocationSpoofingOptionsFromJSONTyped,
    GeolocationSpoofingOptionsToJSON,
    GeolocationSpoofingOptionsToJSONTyped,
} from "./GeolocationSpoofingOptions";

/**
 *
 * @export
 * @interface GeolocationChoice
 */
export interface GeolocationChoice {
    /**
     *
     * @type {GeolocationSpoofingType}
     * @memberof GeolocationChoice
     */
    value: GeolocationSpoofingType;
    /**
     *
     * @type {GeolocationSpoofingOptions}
     * @memberof GeolocationChoice
     */
    extra?: GeolocationSpoofingOptions;
}

/**
 * Check if a given object implements the GeolocationChoice interface.
 */
export function instanceOfGeolocationChoice(value: object): value is GeolocationChoice {
    if (!("value" in value) || value["value"] === undefined) return false;
    return true;
}

export function GeolocationChoiceFromJSON(json: any): GeolocationChoice {
    return GeolocationChoiceFromJSONTyped(json, false);
}

export function GeolocationChoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeolocationChoice {
    if (json == null) {
        return json;
    }
    return {
        value: GeolocationSpoofingTypeFromJSON(json["value"]),
        extra: json["extra"] == null ? undefined : GeolocationSpoofingOptionsFromJSON(json["extra"]),
    };
}

export function GeolocationChoiceToJSON(json: any): GeolocationChoice {
    return GeolocationChoiceToJSONTyped(json, false);
}

export function GeolocationChoiceToJSONTyped(value?: GeolocationChoice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        value: GeolocationSpoofingTypeToJSON(value["value"]),
        extra: GeolocationSpoofingOptionsToJSON(value["extra"]),
    };
}
