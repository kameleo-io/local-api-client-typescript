/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Specifies how the WebGL vendor and renderer will be spoofed. Possible values:
 * 'automatic': The vendor and renderer values comes from the fingerprint.
 * 'manual': Manually configure WebGL metadata. For optimal results, choose a video card model similar to your device's to ensure realistic
 * profile masking.
 * 'off': Turn off the spoofing, use the original settings
 * @export
 */
export const WebglMetaSpoofingType = {
    Automatic: "automatic",
    Manual: "manual",
    Off: "off",
} as const;
export type WebglMetaSpoofingType = (typeof WebglMetaSpoofingType)[keyof typeof WebglMetaSpoofingType];

export function instanceOfWebglMetaSpoofingType(value: any): boolean {
    for (const key in WebglMetaSpoofingType) {
        if (Object.prototype.hasOwnProperty.call(WebglMetaSpoofingType, key)) {
            if (WebglMetaSpoofingType[key as keyof typeof WebglMetaSpoofingType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function WebglMetaSpoofingTypeFromJSON(json: any): WebglMetaSpoofingType {
    return WebglMetaSpoofingTypeFromJSONTyped(json, false);
}

export function WebglMetaSpoofingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebglMetaSpoofingType {
    return json as WebglMetaSpoofingType;
}

export function WebglMetaSpoofingTypeToJSON(value?: WebglMetaSpoofingType | null): any {
    return value as any;
}

export function WebglMetaSpoofingTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): WebglMetaSpoofingType {
    return value as WebglMetaSpoofingType;
}
