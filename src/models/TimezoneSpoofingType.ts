/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Specifies how the timezone will be spoofed. Possble values:
 * 'automatic': Timezone is automatically set by the IP
 * 'manual': Timezone is manually overridden in the profile
 * 'off': Turn off the spoofing, use the original settings
 * @export
 */
export const TimezoneSpoofingType = {
    Automatic: "automatic",
    Manual: "manual",
    Off: "off",
} as const;
export type TimezoneSpoofingType = (typeof TimezoneSpoofingType)[keyof typeof TimezoneSpoofingType];

export function instanceOfTimezoneSpoofingType(value: any): boolean {
    for (const key in TimezoneSpoofingType) {
        if (Object.prototype.hasOwnProperty.call(TimezoneSpoofingType, key)) {
            if (TimezoneSpoofingType[key as keyof typeof TimezoneSpoofingType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function TimezoneSpoofingTypeFromJSON(json: any): TimezoneSpoofingType {
    return TimezoneSpoofingTypeFromJSONTyped(json, false);
}

export function TimezoneSpoofingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimezoneSpoofingType {
    return json as TimezoneSpoofingType;
}

export function TimezoneSpoofingTypeToJSON(value?: TimezoneSpoofingType | null): any {
    return value as any;
}

export function TimezoneSpoofingTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): TimezoneSpoofingType {
    return value as TimezoneSpoofingType;
}
