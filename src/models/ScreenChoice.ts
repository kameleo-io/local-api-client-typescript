/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ScreenSpoofingType } from "./ScreenSpoofingType";
import {
    ScreenSpoofingTypeFromJSON,
    ScreenSpoofingTypeFromJSONTyped,
    ScreenSpoofingTypeToJSON,
    ScreenSpoofingTypeToJSONTyped,
} from "./ScreenSpoofingType";

/**
 *
 * @export
 * @interface ScreenChoice
 */
export interface ScreenChoice {
    /**
     * Specifies how the screen will be spoofed. Possible values:
     * 'automatic': Automatically override the screen resolution based on the fingerprint.
     * 'manual': Manually override the screen resolution.
     * 'off': Turn off the spoofing, use the original settings.
     * @type {ScreenSpoofingType}
     * @memberof ScreenChoice
     */
    value: ScreenSpoofingType;
    /**
     * The screen size of the device in pixels. For example: 1920x1080
     * @type {string}
     * @memberof ScreenChoice
     */
    extra?: string | null;
}

/**
 * Check if a given object implements the ScreenChoice interface.
 */
export function instanceOfScreenChoice(value: object): value is ScreenChoice {
    if (!("value" in value) || value["value"] === undefined) return false;
    return true;
}

export function ScreenChoiceFromJSON(json: any): ScreenChoice {
    return ScreenChoiceFromJSONTyped(json, false);
}

export function ScreenChoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScreenChoice {
    if (json == null) {
        return json;
    }
    return {
        value: ScreenSpoofingTypeFromJSON(json["value"]),
        extra: json["extra"] == null ? undefined : json["extra"],
    };
}

export function ScreenChoiceToJSON(json: any): ScreenChoice {
    return ScreenChoiceToJSONTyped(json, false);
}

export function ScreenChoiceToJSONTyped(value?: ScreenChoice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        value: ScreenSpoofingTypeToJSON(value["value"]),
        extra: value["extra"],
    };
}
