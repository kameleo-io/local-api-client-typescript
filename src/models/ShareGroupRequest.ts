/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ShareAccessRequest } from "./ShareAccessRequest";
import {
    ShareAccessRequestFromJSON,
    ShareAccessRequestFromJSONTyped,
    ShareAccessRequestToJSON,
    ShareAccessRequestToJSONTyped,
} from "./ShareAccessRequest";

/**
 *
 * @export
 * @interface ShareGroupRequest
 */
export interface ShareGroupRequest {
    /**
     * List of share accesses to the folder.
     * @type {Array<ShareAccessRequest>}
     * @memberof ShareGroupRequest
     */
    shareAccesses: Array<ShareAccessRequest>;
}

/**
 * Check if a given object implements the ShareGroupRequest interface.
 */
export function instanceOfShareGroupRequest(value: object): value is ShareGroupRequest {
    if (!("shareAccesses" in value) || value["shareAccesses"] === undefined) return false;
    return true;
}

export function ShareGroupRequestFromJSON(json: any): ShareGroupRequest {
    return ShareGroupRequestFromJSONTyped(json, false);
}

export function ShareGroupRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShareGroupRequest {
    if (json == null) {
        return json;
    }
    return {
        shareAccesses: (json["shareAccesses"] as Array<any>).map(ShareAccessRequestFromJSON),
    };
}

export function ShareGroupRequestToJSON(json: any): ShareGroupRequest {
    return ShareGroupRequestToJSONTyped(json, false);
}

export function ShareGroupRequestToJSONTyped(value?: ShareGroupRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        shareAccesses: (value["shareAccesses"] as Array<any>).map(ShareAccessRequestToJSON),
    };
}
