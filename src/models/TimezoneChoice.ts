/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { TimezoneSpoofingType } from "./TimezoneSpoofingType";
import {
    TimezoneSpoofingTypeFromJSON,
    TimezoneSpoofingTypeFromJSONTyped,
    TimezoneSpoofingTypeToJSON,
    TimezoneSpoofingTypeToJSONTyped,
} from "./TimezoneSpoofingType";

/**
 *
 * @export
 * @interface TimezoneChoice
 */
export interface TimezoneChoice {
    /**
     *
     * @type {TimezoneSpoofingType}
     * @memberof TimezoneChoice
     */
    value: TimezoneSpoofingType;
    /**
     * When the Timezone spoofing is set to manual the timezone in Iana format is required. For example: America/Grenada
     * @type {string}
     * @memberof TimezoneChoice
     */
    extra?: string | null;
}

/**
 * Check if a given object implements the TimezoneChoice interface.
 */
export function instanceOfTimezoneChoice(value: object): value is TimezoneChoice {
    if (!("value" in value) || value["value"] === undefined) return false;
    return true;
}

export function TimezoneChoiceFromJSON(json: any): TimezoneChoice {
    return TimezoneChoiceFromJSONTyped(json, false);
}

export function TimezoneChoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimezoneChoice {
    if (json == null) {
        return json;
    }
    return {
        value: TimezoneSpoofingTypeFromJSON(json["value"]),
        extra: json["extra"] == null ? undefined : json["extra"],
    };
}

export function TimezoneChoiceToJSON(json: any): TimezoneChoice {
    return TimezoneChoiceToJSONTyped(json, false);
}

export function TimezoneChoiceToJSONTyped(value?: TimezoneChoice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        value: TimezoneSpoofingTypeToJSON(value["value"]),
        extra: value["extra"],
    };
}
