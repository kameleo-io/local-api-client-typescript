/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { WebglMetaSpoofingOptions } from "./WebglMetaSpoofingOptions";
import {
    WebglMetaSpoofingOptionsFromJSON,
    WebglMetaSpoofingOptionsFromJSONTyped,
    WebglMetaSpoofingOptionsToJSON,
    WebglMetaSpoofingOptionsToJSONTyped,
} from "./WebglMetaSpoofingOptions";
import type { WebglMetaSpoofingType } from "./WebglMetaSpoofingType";
import {
    WebglMetaSpoofingTypeFromJSON,
    WebglMetaSpoofingTypeFromJSONTyped,
    WebglMetaSpoofingTypeToJSON,
    WebglMetaSpoofingTypeToJSONTyped,
} from "./WebglMetaSpoofingType";

/**
 *
 * @export
 * @interface WebglMetaChoice
 */
export interface WebglMetaChoice {
    /**
     *
     * @type {WebglMetaSpoofingType}
     * @memberof WebglMetaChoice
     */
    value: WebglMetaSpoofingType;
    /**
     *
     * @type {WebglMetaSpoofingOptions}
     * @memberof WebglMetaChoice
     */
    extra?: WebglMetaSpoofingOptions;
}

/**
 * Check if a given object implements the WebglMetaChoice interface.
 */
export function instanceOfWebglMetaChoice(value: object): value is WebglMetaChoice {
    if (!("value" in value) || value["value"] === undefined) return false;
    return true;
}

export function WebglMetaChoiceFromJSON(json: any): WebglMetaChoice {
    return WebglMetaChoiceFromJSONTyped(json, false);
}

export function WebglMetaChoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebglMetaChoice {
    if (json == null) {
        return json;
    }
    return {
        value: WebglMetaSpoofingTypeFromJSON(json["value"]),
        extra: json["extra"] == null ? undefined : WebglMetaSpoofingOptionsFromJSON(json["extra"]),
    };
}

export function WebglMetaChoiceToJSON(json: any): WebglMetaChoice {
    return WebglMetaChoiceToJSONTyped(json, false);
}

export function WebglMetaChoiceToJSONTyped(value?: WebglMetaChoice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        value: WebglMetaSpoofingTypeToJSON(value["value"]),
        extra: WebglMetaSpoofingOptionsToJSON(value["extra"]),
    };
}
