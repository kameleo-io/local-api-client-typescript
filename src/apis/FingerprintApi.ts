/* tslint:disable */
/* eslint-disable */
/**
 * kameleo-local-api
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { FingerprintPreview, ProblemResponse } from "../models/index";
import { FingerprintPreviewFromJSON, FingerprintPreviewToJSON, ProblemResponseFromJSON, ProblemResponseToJSON } from "../models/index";

export interface SearchFingerprintsRequest {
    deviceType?: string;
    osFamily?: string;
    browserProduct?: string;
    browserVersion?: string;
}

/**
 *
 */
export class FingerprintApi extends runtime.BaseAPI {
    /**
     * Retrieves a set of 25 fingerprints based on specified criteria, with the most recent browser versions at the beginning of the list. Note  that calling this method multiple times will return different sets of fingerprints.
     */
    async searchFingerprintsRaw(
        requestParameters: SearchFingerprintsRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<Array<FingerprintPreview>>> {
        const queryParameters: any = {};

        if (requestParameters["deviceType"] != null) {
            queryParameters["deviceType"] = requestParameters["deviceType"];
        }

        if (requestParameters["osFamily"] != null) {
            queryParameters["osFamily"] = requestParameters["osFamily"];
        }

        if (requestParameters["browserProduct"] != null) {
            queryParameters["browserProduct"] = requestParameters["browserProduct"];
        }

        if (requestParameters["browserVersion"] != null) {
            queryParameters["browserVersion"] = requestParameters["browserVersion"];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request(
            {
                path: `/fingerprints`,
                method: "GET",
                headers: headerParameters,
                query: queryParameters,
            },
            initOverrides,
        );

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(FingerprintPreviewFromJSON));
    }

    /**
     * Retrieves a set of 25 fingerprints based on specified criteria, with the most recent browser versions at the beginning of the list. Note  that calling this method multiple times will return different sets of fingerprints.
     */
    async searchFingerprints(
        deviceType?: string,
        osFamily?: string,
        browserProduct?: string,
        browserVersion?: string,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<Array<FingerprintPreview>> {
        const response = await this.searchFingerprintsRaw(
            { deviceType: deviceType, osFamily: osFamily, browserProduct: browserProduct, browserVersion: browserVersion },
            initOverrides,
        );
        return await response.value();
    }
}
